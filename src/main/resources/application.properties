#   This is where most custom configurations are done

#       1st block

#   The default Tomcat server port is :8080, custom configuring it to :8088
server.port=8088

#   Adding custom configurations of the application and calling them from here
welcome.message=Hello World, welcome to CodePrac with Shaviya!

#       2nd block

#   h2 in-memory configurations
#            ----
###    enabling browser-console for h2
#spring.h2.console.enabled=true
###    specifying the DB url of h2 and naming our apps' DB: dep-app
#spring.datasource.url=jdbc:h2:mem:dep-app
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
###    defining the jpa platform that we are using
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#       3rd block

#   switching from h2 to Postgres DB
#            ----
#   database connection information
#      add missing jdbc url pointing to a PostgreSQL database server running on localhost

spring.jpa.hibernate.show-sql=true
spring.datasource.initialization-mode=always
spring.datasource.initialize=true
spring.datasource.continue-on-error=true
#   to enable updates to the DB whenever there is an update to our Entity
spring.jpa.hibernate.ddl-auto=update

#       4th block

# ----- The Below configurations are not necessary - redundant configurations
#            ----
#   for DepartmentRepository test to pass... not known why yet  - Actually everything can work without this Dialect statement,
##       it has caused me a lot of problems with the Entity Manager!
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
#   configurations to use Spring Data JPA Hibernate ORM framework - Actually everything can work without this Dialect statement,
#       it has caused me a lot of problems with the Entity Manager!
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
##   below sets the correct dialect by hand since detection is diabled
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
##   the below driver property is not necessary for the latest postgreSQL
#spring.datasource.driver-class-name=org.postgresql.Driver
#   Disabling feature detection using the below undocumented parameter - make it true for Hibernate to detect the correct version of the PostgreSQL dialect
#spring.jpa.properties.hibernate.temp.use_jpa_metadata_defaults=true
